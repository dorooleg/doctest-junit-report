[doctest] doctest version is "1.2.5"
[doctest] run with "--help" for options
===============================================================================
subcases.cpp(9)
TEST CASE:  lots of nested subcases


root
1
1.1
===============================================================================
subcases.cpp(9)
TEST CASE:  lots of nested subcases


root
2
2.1
===============================================================================
subcases.cpp(9)
TEST CASE:  lots of nested subcases


root
2
===============================================================================
subcases.cpp(9)
TEST CASE:  lots of nested subcases

subcases.cpp(20) FATAL ERROR!

0.002737 s: lots of nested subcases
===============================================================================
subcases.cpp(46)
TEST CASE:  subcases can be used in a separate function as well

===============================================================================
subcases.cpp(46)
TEST CASE:  subcases can be used in a separate function as well
  from function...

subcases.cpp(36) MESSAGE!
  print me twice

===============================================================================
subcases.cpp(46)
TEST CASE:  subcases can be used in a separate function as well
  from function...
  sc1

subcases.cpp(38) MESSAGE!
  hello! from sc1

===============================================================================
subcases.cpp(46)
TEST CASE:  subcases can be used in a separate function as well

subcases.cpp(48) MESSAGE!
  lala

===============================================================================
subcases.cpp(46)
TEST CASE:  subcases can be used in a separate function as well

===============================================================================
subcases.cpp(46)
TEST CASE:  subcases can be used in a separate function as well
  from function...

subcases.cpp(36) MESSAGE!
  print me twice

===============================================================================
subcases.cpp(46)
TEST CASE:  subcases can be used in a separate function as well
  from function...
  sc2

subcases.cpp(41) MESSAGE!
  hello! from sc2

===============================================================================
subcases.cpp(46)
TEST CASE:  subcases can be used in a separate function as well

subcases.cpp(48) MESSAGE!
  lala

0.000437 s: subcases can be used in a separate function as well
===============================================================================
subcases.cpp(51)
  Scenario: vectors can be sized and resized

===============================================================================
subcases.cpp(51)
  Scenario: vectors can be sized and resized
     Given: A vector with some items

subcases.cpp(55) PASSED!
  REQUIRE( v.size() == 5 )
with expansion:
  REQUIRE( 5 == 5 )

subcases.cpp(56) PASSED!
  REQUIRE( v.capacity() >= 5 )
with expansion:
  REQUIRE( 5 >= 5 )

===============================================================================
subcases.cpp(51)
  Scenario: vectors can be sized and resized
     Given: A vector with some items
      When: the size is increased
      Then: the size and capacity change

subcases.cpp(62) ERROR!
  CHECK( v.size() == 20 )
with expansion:
  CHECK( 10 == 20 )

subcases.cpp(63) PASSED!
  CHECK( v.capacity() >= 10 )
with expansion:
  CHECK( 10 >= 10 )

===============================================================================
subcases.cpp(51)
  Scenario: vectors can be sized and resized

===============================================================================
subcases.cpp(51)
  Scenario: vectors can be sized and resized
     Given: A vector with some items

subcases.cpp(55) PASSED!
  REQUIRE( v.size() == 5 )
with expansion:
  REQUIRE( 5 == 5 )

subcases.cpp(56) PASSED!
  REQUIRE( v.capacity() >= 5 )
with expansion:
  REQUIRE( 5 >= 5 )

===============================================================================
subcases.cpp(51)
  Scenario: vectors can be sized and resized
     Given: A vector with some items
      When: the size is reduced
      Then: the size changes but not capacity

subcases.cpp(70) PASSED!
  CHECK( v.size() == 0 )
with expansion:
  CHECK( 0 == 0 )

subcases.cpp(71) PASSED!
  CHECK( v.capacity() >= 5 )
with expansion:
  CHECK( 5 >= 5 )

===============================================================================
subcases.cpp(51)
  Scenario: vectors can be sized and resized

===============================================================================
subcases.cpp(51)
  Scenario: vectors can be sized and resized
     Given: A vector with some items

subcases.cpp(55) PASSED!
  REQUIRE( v.size() == 5 )
with expansion:
  REQUIRE( 5 == 5 )

subcases.cpp(56) PASSED!
  REQUIRE( v.capacity() >= 5 )
with expansion:
  REQUIRE( 5 >= 5 )

===============================================================================
subcases.cpp(51)
  Scenario: vectors can be sized and resized
     Given: A vector with some items
      When: more capacity is reserved
      Then: the capacity changes but not the size

subcases.cpp(78) PASSED!
  CHECK( v.size() == 5 )
with expansion:
  CHECK( 5 == 5 )

subcases.cpp(79) PASSED!
  CHECK( v.capacity() >= 10 )
with expansion:
  CHECK( 10 >= 10 )

===============================================================================
subcases.cpp(51)
  Scenario: vectors can be sized and resized

===============================================================================
subcases.cpp(51)
  Scenario: vectors can be sized and resized
     Given: A vector with some items

subcases.cpp(55) PASSED!
  REQUIRE( v.size() == 5 )
with expansion:
  REQUIRE( 5 == 5 )

subcases.cpp(56) PASSED!
  REQUIRE( v.capacity() >= 5 )
with expansion:
  REQUIRE( 5 >= 5 )

===============================================================================
subcases.cpp(51)
  Scenario: vectors can be sized and resized
     Given: A vector with some items
      When: less capacity is reserved
      Then: neither size nor capacity are changed

subcases.cpp(86) ERROR!
  CHECK( v.size() == 10 )
with expansion:
  CHECK( 5 == 10 )

subcases.cpp(87) PASSED!
  CHECK( v.capacity() >= 5 )
with expansion:
  CHECK( 5 >= 5 )

0.007850 s:   Scenario: vectors can be sized and resized
===============================================================================
[doctest] test cases:      3 |      1 passed |      2 failed |      0 skipped
[doctest] assertions:     17 |     14 passed |      3 failed |
[doctest] Status: FAILURE!
